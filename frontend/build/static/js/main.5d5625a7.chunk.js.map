{"version":3,"sources":["redux/types.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","services/base_service.js","services/StorageUtil.js","pages/Welcome.js","pages/my-page-components/MyFriends.js","pages/my-page-components/EditPrivacy.js","pages/my-page-components/MyCodes.js","pages/my-page-components/AddFriend.js","pages/my-page-components/UpdateMyInfo.js","pages/my-page-components/MyGoogleFriends.js","pages/Home.js","components/GoogleAuth.jsx","pages/auth/LoginPage.jsx","pages/Statistics.js","pages/bar-components/PersonalBar.js","components/Loading.jsx","routes/PrivateRoute.js","App.js","services/serviceWorker.js","index.js"],"names":["SET_USER","SET_UNAUTHENTICATED","SET_LOADING_USER","SET_LOADING_UI","STOP_LOADING_UI","initialState","isAuthenticated","isLoading","credentials","fullname","email","image","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","ui","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","BASE_URL","getGoogleId","google_user","put_storage","key","value","localStorage","setItem","JSON","stringify","get_storage","parse","getItem","Welcome","componentDidMount","bind","onSignIn","testButton","a","googleUser","console","log","this","props","src","React","Component","connect","MyFriends","friends","selected_friends","expanded_friends_row","fetchData","google_id","then","user_friends","setState","axios","get","headers","data","values","className","emptyMessage","field","header","sortable","filter","filterPlaceholder","filterMatchMode","event","selectionMode","selection","onSelectionChange","e","metaKeySelection","paginator","paginatorTemplate","currentPageReportTemplate","rows","rowsPerPageOptions","style","margin","dataKey","rowExpansionTemplate","formSubmissionsTemplate","expandedRows","onRowToggle","onRowExpand","onRowCollapse","expander","EditPrivacy","vaccination_id","privacy_setting","changePrivacySetting","showSuccess","url","vaccine_current_privacy","options","method","response","showGenericError","messages","show","severity","summary","detail","msg","ref","el","toast","label","onChange","placeholder","onClick","MyCodes","logged_in_google_id","my_vaccines","selected_vaccines","qr_hidden","qr_value","panelCollapsed","displayEditPrivacy","vaccine_id_to_be_changed","generateQRCode","onHide","editButton","editPrivacy","user_codes","name","row","icon","vaccines","i","length","push","qr_new","vaccinesCount","selectedVaccinesCount","footer_my_vaccines","visible","width","toggleable","collapsed","onToggle","footer","headerStyle","body","textAlign","bodyStyle","overflow","hidden","AddFriend","new_friend_email","new_friend_tckn","friend_requests","fetch_friend_requests","addFriend","accept_friend_request","decline_friend_request","sendDataForNewFriendRequest","reset_state","data_to_send","friend_email","status","showSuccessAddFriend","showErrorAddFriend","requests","request_id","showSuccessApproved","showError","showSuccessRejected","tckn","dynamicFriendRequests","map","col","acceptButton","declineButton","height","target","UpdateMyInfo","age","country_name","fetch_current_infos","sendUpdatedData","current_name","current_age","current_country_name","baseStyle","leftIcon","MyGoogleFriends","google_friends","can_fetch_my_contacts","auth_url","api_token","auth_icon","addFriendOrInviteMailButton","inviteMailButton","sendSMSInviteButton","sendAuthCode","sendEmailInvite","sendSMSInvite","fetchInitialData","is_auth","showWarn","bool","bool2","disabled","phone","friend_phone","position","myIcon","icons","displayModal","modal","href","rel","Home","rightIcon","GoogleAuth","checkNewUser","history","profile","getBasicProfile","getName","getEmail","getImageUrl","dispatch","clientId","buttonText","onSuccess","cookiePolicy","isSignedIn","scope","LoginPage","Statistics","PersonalBar","handleLogout","loadUserFromLocalStorage","str","charAt","toUpperCase","slice","fetchUpdatedUsername","name_from_db","removeItem","g_name","g_email","borderRadius","alt","to","Loading","PrivateRoute","PrivateComponent","component","rest","render","App","activeItem","model","onTabChange","display","flexDirection","justifyContent","alignItems","path","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d5625a7.chunk.js","sourcesContent":["export const SET_USER = \"SET_USER\";\r\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\r\nexport const SET_LOADING_USER = \"SET_LOADING_USER\";\r\n\r\n// UI\r\nexport const SET_LOADING_UI = \"SET_LOADING_UI\";\r\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";","import { SET_USER, SET_UNAUTHENTICATED, SET_LOADING_USER } from \"../types\";\r\n\r\nconst initialState = {\r\n\tisAuthenticated: false,\r\n\tisLoading: false,\r\n\tcredentials: {\r\n\t\tfullname: \"\",\r\n\t\temail: \"\",\r\n\t\timage: \"\",\r\n\t},\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tcredentials: {\r\n\t\t\t\t\tfullname: action.payload.fullname,\r\n\t\t\t\t\temail: action.payload.email,\r\n\t\t\t\t\timage: action.payload.image\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tcase SET_UNAUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tcredentials: {\r\n\t\t\t\t\tfullname: \"\",\r\n\t\t\t\t\temail: \"\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\tcase SET_LOADING_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { SET_LOADING_UI, STOP_LOADING_UI } from \"../types\";\r\n\r\nconst initialState = {\r\n    isLoading: true,\r\n}\r\n\r\nexport default function uiReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        \r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport uiReducer from \"./reducers/uiReducer\";\r\n\r\nconst middleware = [thunk]\r\nconst initialState = {};\r\n\r\nconst reducers = combineReducers({\r\n\tuser: userReducer,\r\n\tui: uiReducer\r\n});\r\n\r\nconst composeEnhancers =\r\n\ttypeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n\t\t: compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","\nfunction createUrl() {\n    let port = 5000;\n\n    // return `${window.location.protocol}//127.0.0.1:${port}`;\n    return \"https://asi-karnesi.herokuapp.com\";\n}\n\n\nexport const BASE_URL = createUrl()\nexport var APIKEY = null;\n\nexport const clientId = \"141610256272-jufso6co8s7bpq21hhaohkj36lu812nn.apps.googleusercontent.com\";\n\nexport var HEADER = {\n    'APIKEY': APIKEY\n};\n\nexport function BUILD_HEADER(){\n    return {\n        'Access-Control-Allow-Origin': '*'\n    };\n}\n\nexport function getCurrentDate(separator=''){\n\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n}\n\n\nexport function getGoogleId(google_user) {\n    if (google_user == null) return \"null\";\n    return google_user[\"googleId\"]+\"\" ?? \"null\";\n}\n\n// const AXIOS_CONFIG = {\n//     baseUrl :BASE_URL,\n//     withCredentials : true,\n//     headers:{\n//         'Accept' : 'application/json',\n//         'Content-Type' : 'application/json',\n//         'Access-Control-Allow-Origin': '*',\n//     },\n//     responseType : 'blob'\n// }\n\n// export const SERVICE_BASE  = axios.create(AXIOS_CONFIG);\n\nexport default function getUrl(path) {\n    return BASE_URL + path\n}","export function put_storage(key, value) {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\n\r\nexport function get_storage(key) {\r\n    return JSON.parse(window.localStorage.getItem(key));\r\n}\r\n\r\nexport function remove_key(key) {\r\n    window.localStorage.removeItem(key)\r\n}","import React from \"react\";\r\n// import GoogleLogin from \"react-google-login\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clientId } from \"../services/base_service\";\r\nimport { Button } from \"primereact/button\";\r\nimport { put_storage, get_storage } from \"../services/StorageUtil\";\r\n\r\nexport class Welcome extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\t// login : new Login(),\r\n\t\t};\r\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\r\n\t\tthis.onSignIn = this.onSignIn.bind(this);\r\n\t\tthis.testButton = this.testButton.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {}\r\n\r\n\tonSignIn(googleUser) {\r\n\t\tconsole.log(\"googleUser\");\r\n\t\tconsole.log(googleUser);\r\n\r\n\t\tput_storage(\"google_user\", googleUser);\r\n\r\n\t\t// console.log(\"From storage : \")\r\n\t\t// console.log(get_storage(\"google_user\"))\r\n\t\t//\r\n\t\t// var profile = googleUser.getBasicProfile();\r\n\t\t// console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n\t\t// put_storage('google_tokenId', googleUser.tokenId);\r\n\t\t// console.log('Name: ' + profile.getName());\r\n\t\t// console.log('Image URL: ' + profile.getImageUrl());\r\n\t\t// console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n\t}\r\n\r\n\ttestButton() {\r\n\t\t// var google_tokenId = get_storage('google_tokenId');\r\n\t\t// window.localStorage.removeItem('googleProfile');\r\n\t\tconsole.log(\"google_tokenId from local Storage\");\r\n\t\tconsole.log(get_storage(\"google_user\"));\r\n\r\n\t\t// remove all\r\n\t\t// window.localStorage.clear();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { user } = this.props;\r\n\t\tconst { fullname, email, image } = user.credentials;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Home Page</h1>\r\n\t\t\t\t<h2>{fullname}</h2>\r\n\t\t\t\t<h3>{email}</h3>\r\n\t\t\t\t<img src={image} />\r\n\t\t\t\t{/*<div style={{ display: \"flex\", flexDirection: \"column\" }}>*/}\r\n\t\t\t\t{/*\t<Link to=\"/login\">Login</Link>*/}\r\n\t\t\t\t{/*\t<Link to=\"/me\">Me Page</Link>*/}\r\n\t\t\t\t{/*\t<Link to=\"/page-2\">Page 2</Link>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Welcome);\r\n","import React from 'react';\n// import GoogleLogin from \"react-google-login\";\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {Button} from \"primereact/button\";\nimport {put_storage, get_storage} from \"../../services/StorageUtil\";\nimport {TreeTable} from \"primereact/treetable\";\nimport {Column} from \"primereact/column\";\nimport {DataTable} from \"primereact/datatable\";\nimport axios from \"axios\";\n\n\n// import '../App.css';\n\nexport class MyFriends extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n\n            friends : [],\n            selected_friends : [],\n            expanded_friends_row: null,\n\n            // login : new Login(),\n\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n\n    }\n\n\n     async componentDidMount() {\n    let google_user = await get_storage(\"google_user\");\n\n    let google_id = getGoogleId(google_user)\n\n    console.log(google_user)\n\n    this.fetchData(google_id).then(user_friends => this.setState({friends: user_friends}))\n\n\n    }\n\n\n   async fetchData(google_id){\n\n        let data = await axios.get(BASE_URL+\"/user/friends?google_id=\"+google_id, {headers: BUILD_HEADER()})\n        console.log(\"Data : \",data);\n        console.log(\"UserId :\",google_id )\n        let user_friends = data.data[\"friends\"]\n        console.log(\"User Friends \", user_friends)\n        return user_friends;\n    }\n\n\n\n        formSubmissionsTemplate(data) {\n        // let values = Object.values(data[\"vaccines\"]);\n        let values = data[\"vaccines\"]\n        // console.log(data[\"vaccines\"])\n                // console.log(\"Values : \", values)\n\n        return (\n            <div className=\"orders-subtable\">\n                {/*<h5>Submissions for {data.form_id}</h5>*/}\n                <DataTable value={values}\n                emptyMessage=\"Your friend has not share any vaccination record!\"\n                >\n                    {/*<Column field=\"vaccine_id\" header=\"Vaccine ID\" sortable filter filterPlaceholder=\"Search by vaccine ID\" filterMatchMode=\"contains\"/>*/}\n                    <Column field=\"name\" header=\"Vaccine Name\" sortable filter filterPlaceholder=\"Search by name\" filterMatchMode=\"contains\"/>\n                    <Column field=\"dose\" header=\"Vaccine Dose\" sortable filter filterPlaceholder=\"\" filterMatchMode=\"contains\"/>\n                    <Column field=\"vaccine_point\" header=\"Vaccine Point\" sortable filter filterPlaceholder=\"Search by location\" filterMatchMode=\"contains\"/>\n                    <Column field=\"date\" header=\"Vaccine Date\" sortable filter filterPlaceholder=\"Search by date\" filterMatchMode=\"contains\"/>\n                    <Column field=\"valid_until\" header=\"Validation Time\" sortable filter filterPlaceholder=\"\" filterMatchMode=\"contains\"/>\n                    {/*<Column field=\"prettyFormat\" header=\"Answer\" sortable/>*/}\n                </DataTable>\n            </div>\n        );\n    }\n\n    onRowExpand(event) {\n        // this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n    }\n\n    onRowCollapse(event) {\n        // this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n    }\n\n\n\n\n    render() {\n        return (<div>\n\n\n\n               My Friends\n            {/*<div className=\"card\">*/}\n                {/*<h5>Multiple with MetaKey</h5>*/}\n                <DataTable\n                    value={this.state.friends}\n                    selectionMode=\"single\"\n                    // selectionKeys={this.state.selected_friends}\n                    selection={this.state.selected_friends}\n                    onSelectionChange={e => this.setState({selected_friends : e.value})}\n                    metaKeySelection={false}\n                    // metaKeySelection\n                    paginator={true}\n                    // paginatorLeft={paginatorLeft}\n                    // header={submissionsHeader}\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} friends\"\n                    rows={10}\n                    rowsPerPageOptions={[5, 10, 20]} style={{margin: \"10px\"}}\n                    dataKey=\"id\"\n                    rowExpansionTemplate={this.formSubmissionsTemplate}\n                    expandedRows={this.state.expanded_friends_row}\n                    onRowToggle={(e) => this.setState({expanded_friends_row: e.data})}\n                    onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\n                    emptyMessage=\"There is no friends yet!\"\n                >\n                    <Column  expander></Column>\n                    {/*<Column field=\"id\" header=\"ID\" ></Column>*/}\n                    <Column field=\"name\" header=\"Name\" filter filterPlaceholder=\"Search by name\" filterMatchMode=\"contains\"></Column>\n                    <Column field=\"age\" header=\"Age\" filter filterPlaceholder=\"Age\" filterMatchMode=\"contains\"></Column>\n                    <Column field=\"country_name\" header=\"Country\" filter filterPlaceholder=\"Search by country name\" filterMatchMode=\"contains\"></Column>\n                    {/*<Column field=\"surname\" header=\"Surname\" filter filterPlaceholder=\"Search by surname\" filterMatchMode=\"contains\"></Column>*/}\n                    <Column field=\"with_friends_since\" header=\"Friends with Since\" ></Column>\n                    {/*<Column field=\"type\" header=\"Type\"></Column>*/}\n                </DataTable>\n            {/*</div>*/}\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default MyFriends;\n","import React from 'react';\nimport axios from \"axios\";\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {Button} from \"primereact/button\";\nimport {Messages} from \"primereact/messages\";\nimport {Toast} from \"primereact/toast\";\nimport qs from 'qs';\nimport {Dropdown} from \"primereact/dropdown\";\nimport {get_storage} from \"../../services/StorageUtil\";\n\n\nclass EditPrivacy extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            vaccination_id: this.props.vaccination_id,\n            privacy_setting: \"\",\n            google_id:\"\",\n\n        };\n\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n\n\n        this.changePrivacySetting = this.changePrivacySetting.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n\n\n    }\n\n\n    async componentDidMount() {\n\n        this.setState({privacy_setting: \"2\"})\n        let google_user = await get_storage(\"google_user\");\n        let google_id = getGoogleId(google_user)\n        this.setState({google_id:google_id})\n        await this.fetchData(this.state.vaccination_id);\n    }\n\n    async fetchData(vaccination_id) {\n        let url = BASE_URL + \"/get-privacy?vaccination_id=\" + vaccination_id;\n        let data = await axios.get(url, {headers: BUILD_HEADER()});\n        console.log(data)\n        let payload = data.data;\n        let vaccine_current_privacy = payload[\"privacy_setting\"];\n        console.log(\"vaccine_current_privacy\")\n        console.log(vaccine_current_privacy)\n        this.setState({privacy_setting:vaccine_current_privacy})\n\n\n    }\n\n    printState() {\n        console.log(\"State :\", this.state);\n    }\n\n\n    async changePrivacySetting() {\n\n\n        console.log(\"Privacy setting is changed\");\n        console.log(this.state.vaccination_id);\n        console.log(\"New privacy : \", this.state.privacy_setting)\n\n        let payload = {\n            \"google_id\" : this.state.google_id,\n            \"vaccination_id\" : this.state.vaccination_id,\n            \"new_privacy\" : this.state.privacy_setting\n        }\n\n        console.log(\"Payload : \", payload)\n        let url = BASE_URL + \"/set-privacy\";\n        const options = {\n            method: 'POST',\n            headers: BUILD_HEADER(),\n            data: payload,\n            url,\n        };\n\n        let response = await axios(options);\n        console.log(\"POST RESPONSE\", response.data);\n\n        if (response.data[\"status\"] === 200) {\n            this.showSuccess();\n        } else {\n            this.showGenericError(\"Privacy settting is NOT changed!\")\n        }\n    }\n\n    showSuccess() {\n        this.messages.show({severity: 'success', summary: '', detail: 'Success! Privacy data has changed'});\n        // this.toast.show({severity: 'success', summary: 'Editing is Success', detail: 'Privacy data has changed'});\n\n    }\n\n\n    showError() {\n        this.messages.show({severity: 'error', summary: '', detail: 'Need to authorize first! Validation failed'});\n        // this.toast.show({ severity: 'error', summary: 'Need to authorize first!', detail: 'Validation failed' });\n    }\n\n\n    showGenericError(msg) {\n        this.messages.show({severity: 'error', summary: '', detail: \"Error!\" + msg});\n        // this.toast.show({ severity: 'error', summary: 'Error!', detail: msg });\n    }\n\n    submissionOnChange(key, value) {\n\n\n    }\n\n    render() {\n\n        const privacySettings = [\n            {label: 'Public', value: 5},\n            {label: 'Friends', value: 3},\n            {label: 'All Admins', value: 1},\n            {label: 'Private', value: 0}\n\n        ];\n\n\n        return (\n\n            <div>\n                <Messages ref={(el) => this.messages = el}/>\n                <Toast ref={(el) => this.toast = el}/>\n\n                <div style={{'height': '300px', 'margin': '10px'}}>\n\n                    <div className=\"p-grid p-fluid\" style={{'height': '300px', 'margin': '10px'}}>\n                        <div className=\"p-col-12 p-md-2\">\n                        </div>\n\n                        <div className=\"p-col-12 p-md-8\">\n                            <div className=\"p-field p-grid\">\n                                <h4>Change the selected vaccine's privacy setting : </h4> <br/>\n                                <Dropdown value={this.state.privacy_setting} options={privacySettings}\n                                          onChange={(e) => this.setState({privacy_setting: e.value})}\n                                          placeholder=\"Select a privacy setting\"/>\n                            </div>\n                            <Button label=\"Change privacy setting!\" style={{\"margin\": \"10px\"}}\n                                    onClick={this.changePrivacySetting}/>\n                        </div>\n                        <div className=\"p-col-12 p-md-2\">\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default EditPrivacy;","import React from 'react';\nimport axios from 'axios'\n\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\n\nimport {Button} from \"primereact/button\";\nimport {get_storage} from \"../../services/StorageUtil\";\nimport {Column} from \"primereact/column\";\nimport {DataTable} from \"primereact/datatable\";\nimport QRCode from \"qrcode.react\"\nimport {Panel} from \"primereact/panel\";\nimport {Dialog} from \"primereact/dialog\";\nimport EditPrivacy from \"./EditPrivacy\";\n\n\nexport class MyCodes extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n\n\n            logged_in_google_id : \"\",\n            my_vaccines: [],\n            selected_vaccines: [],\n            qr_hidden: true,\n            qr_value: \"\",\n            panelCollapsed: false,\n            displayEditPrivacy: false,\n            vaccine_id_to_be_changed: null,\n\n\n            // login : new Login(),\n\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.generateQRCode = this.generateQRCode.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n\n\n        this.onHide = this.onHide.bind(this);\n\n\n        this.editButton = this.editButton.bind(this);\n        this.editPrivacy = this.editPrivacy.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        let google_user = get_storage(\"google_user\");\n\n        // con\n\n\n        let google_id = getGoogleId(google_user)\n\n        this.setState({logged_in_google_id : google_id})\n        console.log(\"google_user id : \", google_id)\n        console.log(google_user)\n\n        this.fetchData(google_id).then(user_codes => this.setState({my_vaccines: user_codes}))\n    }\n\n\n    async fetchData(google_id) {\n\n        let data = await axios.get(BASE_URL + \"/user/codes?google_id=\" + google_id, {headers: BUILD_HEADER()})\n        console.log(\"Data : \", data);\n        let user_codes = data.data[\"my_vaccines\"]\n        console.log(\"User Friends \", user_codes)\n        return user_codes;\n    }\n\n    onHide(name) {\n        this.setState({\n            [`${name}`]: false\n        });\n    }\n\n    async editPrivacy(row) {\n\n        await this.setState({vaccine_id_to_be_changed: row[\"vaccination_id\"] ?? \"error\"});\n        //\n        await this.setState({displayEditPrivacy: true});\n    }\n\n    editButton(row) {\n        return (\n            <div>\n                <Button type=\"button\" onClick={() => this.editPrivacy(row)} label=\"Privacy\" icon=\"pi pi-users\"\n                        className=\"p-button-secondary\"/>\n            </div>);\n    }\n\n\n    formSubmissionsTemplate(data) {\n        // let values = Object.values(data[\"vaccines\"]);\n        let values = data[\"vaccines\"];\n        // console.log(data[\"vaccines\"])\n        // console.log(\"Values : \", values)\n        return (\n            <div className=\"orders-subtable\">\n                {/*<h5>Submissions for {data.form_id}</h5>*/}\n                <DataTable value={values}>\n                    <Column field=\"vaccine\" header=\"Vaccine\" sortable/>\n                    {/*<Column field=\"prettyFormat\" header=\"Answer\" sortable/>*/}\n                </DataTable>\n            </div>\n        );\n    }\n\n    onRowExpand(event) {\n        // this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n    }\n\n    onRowCollapse(event) {\n        // this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n    }\n\n\n    async generateQRCode() {\n\n        let vaccines = [];\n        for(let i = 0; i < this.state.selected_vaccines.length ; i++){\n            vaccines.push(this.state.selected_vaccines[i][\"vaccination_id\"]);\n        }\n        // let vaccines = this.state.selected_vaccines\n        let payload = {\n            \"google_id\": this.state.logged_in_google_id,\n            \"vaccination_ids\": vaccines,\n        }\n\n        console.log(\"Payload : \", payload)\n        let url = BASE_URL + \"/create-link\";\n        const options = {\n            method: 'POST',\n            headers: BUILD_HEADER(),\n            data: payload,\n            url,\n        };\n\n        let response = await axios(options);\n\n        // console.log(\"Generated QR Code !!!\");\n        this.setState({qr_hidden: false});\n        let qr_new = response.data[\"link\"]\n        // console.log(\"QR : \", qr_new);\n        this.setState({qr_value: qr_new})\n\n        this.setState({panelCollapsed: true})\n    }\n\n\n    render() {\n        // let friends_header = <div className=\"p-clearfix\" style={{'lineHeight': '1.87em'}}>\n        //     Submissions for {(this.state.selectedFormDetail) ? this.state.selectedFormDetail : \"\"}\n        // </div>;\n\n        let vaccinesCount = this.state.my_vaccines ? this.state.my_vaccines.length : 0;\n        let selectedVaccinesCount = this.state.selected_vaccines ? this.state.selected_vaccines.length : 0;\n\n        let footer_my_vaccines =\n            <div className=\"p-fluid p-formgrid p-grid\">\n                <div className=\"p-field p-col\">\n                    There are {selectedVaccinesCount} selected vaccine(s) out of {vaccinesCount} vaccine(s) <br/>\n                    Select the vaccines then click the Generate button.\n                </div>\n                <div className=\"p-field p-col\">\n                    <Button label=\"Generate\" onClick={this.generateQRCode}/>\n                </div>\n            </div>;\n\n        return (<div>\n\n                <Dialog header=\"Edit Privacy Settings\" visible={this.state.displayEditPrivacy} style={{width: '50vw'}}\n                        onHide={() => this.onHide('displayEditPrivacy')}>\n\n                    <EditPrivacy\n                        vaccination_id={this.state.vaccine_id_to_be_changed}\n                    />\n                </Dialog>\n\n                <div className=\"card\">\n                    {/*<h5>Checkbox</h5>*/}\n                    <Panel header=\"My Vaccines\" toggleable collapsed={this.state.panelCollapsed}\n                           onToggle={(e) => this.setState({panelCollapsed: e.value})}\n                    >\n                        <DataTable value={this.state.my_vaccines}\n                                   selection={this.state.selected_vaccines}\n                                   onSelectionChange={e => this.setState({selected_vaccines: e.value})}\n                                   dataKey=\"vaccination_id\"\n                                   footer={footer_my_vaccines}>\n                            <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\n                            {/*<Column field=\"vaccination_id\" header=\"Code\"  ></Column>*/}\n                            {/*<Column field=\"vaccine_id\" header=\"Vaccine ID\" sortable filter*/}\n                            {/*        filterPlaceholder=\"Search by vaccine ID\" filterMatchMode=\"contains\"/>*/}\n                            <Column field=\"name\" header=\"Vaccine Name\" sortable filter\n                                    filterPlaceholder=\"Search by name\" filterMatchMode=\"contains\"/>\n                            <Column field=\"dose\" header=\"Vaccine Dose\" sortable filter filterPlaceholder=\"\"\n                                    filterMatchMode=\"contains\"/>\n                            <Column field=\"vaccine_point\" header=\"Vaccine Point\" sortable filter\n                                    filterPlaceholder=\"Search by location\" filterMatchMode=\"contains\"/>\n                            <Column field=\"date\" header=\"Vaccine Date\" sortable filter\n                                    filterPlaceholder=\"Search by date\" filterMatchMode=\"contains\"/>\n                            <Column field=\"valid_until\" header=\"Validation Time\" sortable filter filterPlaceholder=\"\"\n                                    filterMatchMode=\"contains\"/>\n                            <Column body={this.editButton} headerStyle={{width: '8em', textAlign: 'center'}}\n                                    bodyStyle={{textAlign: 'center', overflow: 'visible'}}/>\n\n                        </DataTable>\n\n                    </Panel>\n\n                </div>\n                <div className=\"card\" hidden={this.state.qr_hidden}>\n\n                    <h2>QR-Code</h2>\n\n                    <QRCode value={this.state.qr_value}/>\n\n                </div>\n\n\n                {/*<Button label=\"Test button\"/>*/}\n\n            </div>\n        );\n    }\n}\n\nexport default MyCodes;\n","import React from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Button} from \"primereact/button\";\nimport axios from \"axios\";\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {get_storage} from \"../../services/StorageUtil\";\nimport {Panel} from \"primereact/panel\";\nimport {Messages} from \"primereact/messages\";\nimport {Toast} from \"primereact/toast\";\n\nexport class AddFriend extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            // login : new Login(),\n            logged_in_google_id: null,\n            new_friend_email: \"\",\n            new_friend_tckn: \"\",\n            friend_requests: [],\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetch_friend_requests = this.fetch_friend_requests.bind(this);\n\n        this.addFriend = this.addFriend.bind(this);\n        this.accept_friend_request = this.accept_friend_request.bind(this);\n        this.decline_friend_request = this.decline_friend_request.bind(this);\n\n        this.sendDataForNewFriendRequest = this.sendDataForNewFriendRequest.bind(\n            this\n        );\n        this.reset_state = this.reset_state.bind(this);\n    }\n\n    async componentDidMount() {\n        let google_user = await get_storage(\"google_user\");\n        let google_id = getGoogleId(google_user);\n\n        this.setState({logged_in_google_id: google_id});\n        console.log(\"Logged in email is : \", google_id);\n\n        await this.fetch_friend_requests();\n    }\n\n    async addFriend(e) {\n        await this.sendDataForNewFriendRequest(e);\n    }\n\n    async sendDataForNewFriendRequest(e) {\n        console.log(\"sendData\");\n\n        let data_to_send = {\n            google_id: this.state.logged_in_google_id,\n            friend_email: this.state.new_friend_email,\n        };\n\n        let url = BASE_URL + \"/friend-request\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let data = await axios(options);\n\n        console.log(data);\n        // if (data.data.status !== 200) {\n        // \t// this.messages.show({severity: 'error', summary: 'ERROR', detail: 'NOT ADDED'});\n        // \tconsole.log(\"Error! not added\");\n        // } else {\n        // \t// this.messages.show({severity: 'success', summary: 'Success', detail: 'add submitted'});\n        // \tconsole.log(\"Add submitted\");\n        // }\n        console.log(data.data.status);\n        if (data.data.status === 200) {\n            this.showSuccessAddFriend();\n        } else {\n            this.showErrorAddFriend(data.data[\"error\"]);\n        }\n        // this.reset_state()\n    }\n\n    async fetch_friend_requests() {\n        let data = await axios.get(\n            BASE_URL + \"/friend-requests?google_id=\" + this.state.logged_in_google_id,\n            {headers: BUILD_HEADER()}\n        );\n\n        // console.log(\"Data : \", data);\n        let requests = data.data[\"friend_requests\"];\n        this.setState({friend_requests: requests});\n        console.log(\"requests\");\n        console.log(requests);\n    }\n\n    async accept_friend_request(request_id) {\n        let data_to_send = {\n            request_id: request_id,\n        };\n\n        // data_to_send[\"request_id\"] = request_id\n\n        let url = BASE_URL + \"/accept-friend-request\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let response = await axios(options);\n        console.log(\"POST RESPONSE\", response.data);\n        if (response.data[\"status\"] === 200) {\n            this.showSuccessApproved();\n        } else {\n            this.showError();\n        }\n    }\n\n    async decline_friend_request(request_id) {\n        let data_to_send = {\n            request_id: request_id,\n        };\n\n        let url = BASE_URL + \"/reject-friend-request\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let response = await axios(options);\n        console.log(\"POST RESPONSE\", response.data);\n        if (response.data[\"status\"] === 200) {\n            this.showSuccessRejected();\n        } else {\n            this.showError();\n        }\n    }\n\n    reset_state() {\n        this.setState({\n            email: null,\n            tckn: null,\n        });\n    }\n\n    showSuccessAddFriend() {\n        this.messages.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request sent!\",\n        });\n        this.toast.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request sent!\",\n        });\n    }\n\n\n    showErrorAddFriend(msg) {\n        this.messages.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: msg,\n        });\n        this.toast.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: msg,\n        });\n    }\n\n    showSuccessApproved() {\n        this.messages.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request approved\",\n        });\n        this.toast.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request approved\",\n        });\n    }\n\n    showSuccessRejected() {\n        this.messages.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request rejected\",\n        });\n        this.toast.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request rejected\",\n        });\n    }\n\n    showError() {\n        this.messages.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: \"Friend request failed\",\n        });\n        this.toast.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: \"Friend request failed\",\n        });\n    }\n\n\n    render() {\n        const dynamicFriendRequests = this.state.friend_requests.map((col, i) => {\n            // return <div key={i} ></div>;\n            let request_id = col[\"request_id\"];\n\n            let acceptButton = (\n                <Button\n                    label=\"Accept\"\n                    icon=\"pi pi-check\"\n                    className=\"p-button-success\"\n                    onClick={() => this.accept_friend_request(request_id)}\n                />\n            );\n            let declineButton = (\n                <Button\n                    label=\"Decline\"\n                    icon=\"pi pi-times\"\n                    className=\"p-button-danger\"\n                    onClick={() => this.decline_friend_request(request_id)}\n                />\n            );\n\n            return (\n                <div key={i} className=\"p-fluid p-formgrid p-grid\">\n                    <div className=\"p-field p-col\">\n                        <label>{col[\"requester_name\"]}</label>\n                        <br/>\n                    </div>\n                    <div className=\"p-field p-col\">\n                        <label>{col[\"requester_email\"]}</label>\n                        <br/>\n                    </div>\n                    <div className=\"p-field p-col\">\n                        {acceptButton}\n                        <br/>\n                    </div>\n                    <div className=\"p-field p-col\">\n                        {declineButton}\n                        <br/>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <Messages ref={(el) => (this.messages = el)}/>\n                <Toast ref={(el) => (this.toast = el)}/>\n                <div style={{height: \"300px\", margin: \"10px\"}}>\n                    <div className=\"p-grid p-fluid\">\n                        <div className=\"p-col-12 p-md-6\">\n                            <Panel header=\"Add new Friend\" className=\"p-jc-start\" toggleable>\n\n                                <div className=\"p-field p-grid\">\n                                    <label className=\"p-col-fixed\" style={{width: \"100px\"}}>\n                                        Email\n                                    </label>\n                                    <div className=\"p-col\">\n                                        <InputText\n                                            value={this.state.new_friend_email}\n                                            onChange={(e) =>\n                                                this.setState({new_friend_email: e.target.value})\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                                <br/>\n                            </Panel>\n\n\n                            <Button label=\"Add\" onClick={(e) => this.addFriend(e)}/>\n                        </div>\n                        <div className=\"p-col-12 p-md-6\">\n                            <Panel header=\"Friend Requests\" className=\"p-jc-start\" toggleable>\n                                {dynamicFriendRequests}\n                            </Panel>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddFriend;\n","import React from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Button} from \"primereact/button\";\nimport axios from \"axios\";\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {get_storage} from \"../../services/StorageUtil\";\nimport {Panel} from \"primereact/panel\";\nimport {Messages} from \"primereact/messages\";\nimport {Toast} from \"primereact/toast\";\nimport {TabPanel, TabView} from \"primereact/tabview\";\nimport MyFriends from \"./MyFriends\";\nimport MyCodes from \"./MyCodes\";\nimport AddFriend from \"./AddFriend\";\nimport {Dropdown} from \"primereact/dropdown\";\n\nexport class UpdateMyInfo extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            logged_in_google_id: null,\n            name: \"\",\n            age: \"\",\n            country_name: \"\",\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetch_current_infos = this.fetch_current_infos.bind(this);\n\n        this.sendUpdatedData = this.sendUpdatedData.bind(this);\n    }\n\n    async componentDidMount() {\n        let google_user = await get_storage(\"google_user\");\n        let google_id = getGoogleId(google_user);\n\n        this.setState({logged_in_google_id: google_id});\n        console.log(\"Logged in email is : \", google_id);\n\n        await this.fetch_current_infos();\n    }\n\n    async sendUpdatedData() {\n\n        let payload = {\n            \"is_update\": true,\n            \"google_id\": this.state.logged_in_google_id,\n            \"name\": this.state.name,\n            \"age\": this.state.age || null,\n            \"country_name\": this.state.country_name,\n        }\n        console.log(payload)\n\n        let url = BASE_URL + \"/update-user-info\";\n        const options = {\n            method: 'POST',\n            headers: BUILD_HEADER(),\n            data: payload,\n            url,\n        };\n\n        axios(options).then(data => {\n            console.log(data);\n            this.showSuccess();\n\n        })\n\n    }\n\n    async fetch_current_infos() {\n        let response = await axios.get(\n            BASE_URL + \"/user-info?google_id=\" + this.state.logged_in_google_id,\n            {headers: BUILD_HEADER()}\n        );\n\n        let data = response.data[\"info\"];\n        console.log(\"response.data\")\n        console.log(response.data)\n        let current_name = data[\"name\"]\n        let current_age = data[\"age\"] || \"\"\n        let current_country_name = data[\"country_name\"]\n        this.setState({name: current_name})\n        this.setState({age: current_age})\n        this.setState({country_name: current_country_name})\n\n    }\n\n\n    showSuccess() {\n        this.messages.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Update info sent!\",\n        });\n        this.toast.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Update info sent!\",\n        });\n    }\n\n    showError() {\n        this.messages.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: \"Update info failed\",\n        });\n        this.toast.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: \"Update info failed\",\n        });\n    }\n\n\n    render() {\n        const countryOptions = [\n            {label: 'Not Given', value: \"\"},\n            {label: 'Turkey', value: \"Turkey\"},\n            {label: 'USA', value: \"USA\"},\n            {label: 'UK', value: \"UK\"},\n            {label: 'Germany', value: \"Germany\"},\n\n        ];\n        const baseStyle = {width: \"100%\"}\n        return (\n\n            <div style={baseStyle}>\n                <Messages ref={(el) => this.messages = el}/>\n                <Toast ref={(el) => this.toast = el}/>\n                <div className=\"card\" style={baseStyle}>\n                    <TabView className=\"tabview-custom\">\n                        <TabPanel header=\"Update My Information\" leftIcon=\"pi pi-user\">\n\n                            <div className=\"p-grid p-fluid\">\n                                <div className=\"p-col-12 p-md-6\">\n                                    <div className=\"p-field p-grid\">\n                                        <label className=\"p-col-fixed\" style={{width: \"100px\"}}>\n                                            Name\n                                        </label>\n                                        <div className=\"p-col\">\n                                            <InputText\n                                                value={this.state.name}\n                                                onChange={(e) =>\n                                                    this.setState({name: e.target.value})\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"p-field p-grid\">\n                                        <label className=\"p-col-fixed\" style={{width: \"100px\"}}>\n                                            Age\n                                        </label>\n                                        <div className=\"p-col\">\n                                            <InputText\n                                                value={this.state.age}\n                                                onChange={(e) =>\n                                                    this.setState({age: e.target.value})\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"p-field p-grid\">\n                                        <label className=\"p-col-fixed\" style={{width: \"100px\"}}>\n                                            Country Name\n                                        </label>\n                                        <div className=\"p-col\">\n                                            <Dropdown value={this.state.country_name} options={countryOptions}\n                                                      onChange={(e) => this.setState({country_name: e.value})}\n                                                      placeholder=\"Select a country\"/>\n                                        </div>\n                                    </div>\n\n\n                                    <Button label=\"Update\" onClick={() => this.sendUpdatedData()}/>\n                                </div>\n                                <div className=\"p-col-12 p-md-6\">\n                                </div>\n                            </div>\n\n\n                        </TabPanel>\n                    </TabView>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default UpdateMyInfo;\n","import React from 'react';\nimport {Panel} from \"primereact/panel\";\nimport {InputText} from \"primereact/inputtext\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Button} from \"primereact/button\";\nimport axios from \"axios\";\nimport {BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {get_storage} from \"../../services/StorageUtil\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Toast} from \"primereact/toast\";\nimport {Messages} from \"primereact/messages\";\n\n\nexport class MyGoogleFriends extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n\n            logged_in_google_id: null,\n            google_friends: [],\n            can_fetch_my_contacts: false,\n            auth_url: \"\",\n            api_token: \"\",\n            auth_icon: \"pi pi-lock\"\n        };\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.addFriendOrInviteMailButton = this.addFriendOrInviteMailButton.bind(this);\n\n\n        this.inviteMailButton = this.inviteMailButton.bind(this);\n        this.sendSMSInviteButton = this.sendSMSInviteButton.bind(this);\n        this.sendAuthCode = this.sendAuthCode.bind(this);\n        this.sendDataForNewFriendRequest = this.sendDataForNewFriendRequest.bind(this);\n        this.sendEmailInvite = this.sendEmailInvite.bind(this);\n        this.sendSMSInvite = this.sendSMSInvite.bind(this);\n\n        this.onHide = this.onHide.bind(this);\n        this.onClick = this.onClick.bind(this);\n\n\n    }\n\n\n    async componentDidMount() {\n        let google_user = await get_storage(\"google_user\");\n        let google_id = getGoogleId(google_user);\n\n        this.setState({logged_in_google_id: google_id});\n        this.fetchInitialData();\n    }\n\n    async sendDataForNewFriendRequest(email) {\n        console.log(\"sendData\");\n\n        let data_to_send = {\n            google_id: this.state.logged_in_google_id,\n            friend_email: email,\n        };\n\n        let url = BASE_URL + \"/friend-request\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let data = await axios(options);\n\n        console.log(data);\n\n        console.log(data.data.status);\n        try {\n            if (data.data.status === 200) {\n                this.showSuccessAddFriend();\n            } else {\n                this.showErrorAddFriend(data.data[\"error\"]);\n            }\n        } catch (e) {\n        }\n    }\n\n    showSuccessAddFriend() {\n        this.messages.show({\n            severity: \"success\",\n            summary: \"\",\n            detail: \"Friend request sent!\",\n        });\n\n    }\n\n    showErrorAddFriend(msg) {\n        this.messages.show({\n            severity: \"error\",\n            summary: \"\",\n            detail: msg,\n        });\n\n    }\n\n\n    async fetchInitialData() {\n        let response = await axios.get(BASE_URL + \"/google/my-friends\" + \"?google_id=\" + this.state.logged_in_google_id, BUILD_HEADER())\n        let data = response.data;\n\n        let is_auth = data[\"is_auth\"]\n        // let is_auth = false;\n        console.log(data);\n\n        if (is_auth) {\n            this.setState({auth_icon: \"pi pi-unlock\"})\n            this.setState({google_friends: data[\"friends\"]})\n            this.showSuccess()\n\n        } else {\n            // pop up shows\n            this.showWarn();\n            this.setState({auth_url: data[\"auth_url\"]})\n            this.onClick('displayModal');\n        }\n\n    }\n\n    showSuccess() {\n        try {\n            this.messages.show({severity: 'success', summary: '', detail: 'Authorize Success! Access token acquired'});\n\n        } catch (e) {\n\n        }\n    }\n\n    showWarn() {\n        try {\n            this.messages.show({\n                severity: 'warn',\n                summary: 'Authorize Needed',\n                detail: 'Access token could not acquired'\n            });\n\n        } catch (e) {\n\n        }\n    }\n\n    addFriendOrInviteMailButton(row) {\n        console.log(\"Add Frient or Invite Mail Row\", row)\n\n        let bool = row[\"is_user\"]\n        if (bool) {\n            return (\n                <div>\n                    <Button type=\"button\" onClick={() => this.sendDataForNewFriendRequest(row[\"email\"])}\n                            label=\"Add Friend\" icon=\"pi pi-user-plus\" className=\"p-button-secondary\"/>\n                </div>);\n        } else\n            return <div></div>;\n\n\n    }\n\n    inviteMailButton(row) {\n\n        let bool = !row[\"email\"]\n        let bool2 = row[\"is_user\"]\n        return (\n            <div>\n                <Button type=\"button\" onClick={() => this.sendEmailInvite(row[\"email\"], row[\"name\"])}\n                        label=\"Invite\" disabled={bool | bool2}\n                        icon=\"pi pi-inbox\" className=\"p-button-secondary\"/>\n            </div>\n        )\n            ;\n\n    }\n\n\n    sendSMSInviteButton(row) {\n        // console.log(\"Text Invite Row\", row)\n\n        let bool = row[\"phone\"].length <= 0 || row[\"is_user\"];\n        return (\n            <div>\n                <Button type=\"button\" onClick={() => this.sendSMSInvite(row[\"phone\"], row[\"name\"])} label=\"Invite\"\n                        icon=\"pi pi-comment\" className=\"p-button-secondary\" disabled={bool}/>\n            </div>);\n        ;\n    }\n\n    async sendEmailInvite(email, name) {\n        let data_to_send = {\n            google_id: this.state.logged_in_google_id,\n            friend_email: email,\n            name: name,\n        };\n\n        let url = BASE_URL + \"/invite-email\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let data = await axios(options);\n\n        if (data.data.status === 200) {\n            this.messages.show({\n                severity: \"success\",\n                summary: \"\",\n                detail: \"Invite request sent!\",\n            });\n\n        } else {\n            this.messages.show({\n                severity: \"error\",\n                summary: \"\",\n                detail: data.data[\"error\"],\n            });\n\n        }\n    }\n\n\n    async sendSMSInvite(phone, name) {\n\n        console.log(\"SendSmsInmvite\")\n        let data_to_send = {\n            google_id: this.state.logged_in_google_id,\n            friend_phone: phone,\n            name: name,\n        };\n\n        let url = BASE_URL + \"/invite-sms\";\n        const options = {\n            method: \"POST\",\n            headers: BUILD_HEADER(),\n            data: data_to_send,\n            url,\n        };\n        let data = await axios(options);\n\n        if (data.data.status === 200) {\n            this.messages.show({\n                severity: \"success\",\n                summary: \"\",\n                detail: \"Invite request sent!\",\n            });\n\n        } else {\n            this.messages.show({\n                severity: \"error\",\n                summary: \"\",\n                detail: data.data[\"error\"],\n            });\n\n        }\n    }\n\n    onHide(name) {\n        this.setState({\n            [`${name}`]: false\n        });\n    }\n\n    onClick(name, position) {\n        let state = {\n            [`${name}`]: true\n        };\n\n        if (position) {\n            state = {\n                ...state,\n                position\n            }\n        }\n\n        this.setState(state);\n    }\n\n    async sendAuthCode() {\n\n        let payload = {\n            \"google_id\": this.state.logged_in_google_id,\n            \"google_code\": this.state.api_token\n        }\n\n        console.log(\"Payload : \", payload)\n        let url = BASE_URL + \"/google/auth-contact\";\n        const options = {\n            method: 'POST',\n            headers: BUILD_HEADER(),\n            data: payload,\n            url,\n        };\n\n        let response = await axios(options);\n\n        this.onHide(\"displayModal\");\n        await this.fetchInitialData();\n\n    }\n\n\n    render() {\n        const myIcon = (\n            <button className=\"p-dialog-titlebar-icon p-link\">\n                <span className={this.state.auth_icon}></span>\n            </button>\n        )\n\n        return (<div>\n                <Messages ref={(el) => (this.messages = el)}/>\n                <div className=\"card\">\n\n                    <Panel header=\"Google Contacts\" className=\"p-jc-start\" toggleable>\n                        <DataTable\n                            value={this.state.google_friends}\n                            paginator={true}\n                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} friends\"\n                            rows={10}\n                            rowsPerPageOptions={[5, 10, 20]} style={{margin: \"10px\"}}\n                            dataKey=\"id\"\n                            emptyMessage=\"There is no google friend yet!\"\n                        >\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"\n                                    filterMatchMode=\"contains\"></Column>\n                            <Column field=\"phone\" header=\"Phone Number\" sortable filter\n                                    filterPlaceholder=\"Search by number\"\n                                    filterMatchMode=\"contains\"></Column>\n                            <Column header=\"\" body={this.sendSMSInviteButton}/>\n                            <Column field=\"email\" header=\"Email\" sortable filter\n                                    filterPlaceholder=\"Search by email\"\n                                    filterMatchMode=\"contains\"></Column>\n                            <Column header=\"\" body={this.inviteMailButton}/>\n                            <Column header=\"\" body={this.addFriendOrInviteMailButton}/>\n\n                        </DataTable>\n\n                    </Panel>\n\n\n                    {/*<Button label=\"Add\" onClick={(e) => this.addFriend(e)}/>*/}\n                </div>\n                {/*<div className=\"p-col-12 p-md-1\">*/}\n                {/*<Button label=\"Autherize\" icon={this.state.auth_icon} onClick={this.authorize}/>*/}\n\n                <Dialog header=\"Google Contact Auth.\" icons={myIcon} visible={this.state.displayModal} modal={false}\n                        style={{width: '50vw'}} onHide={() => this.onHide('displayModal')}>\n\n                    <h6>Your authentication has expired or you never did. Please confirm again.</h6>\n                    <h5>Click to the url and copy the Authentication Code to below. </h5>\n                    <a href={this.state.auth_url} target=\"_blank\" rel=\"noreferrer\">\n                        {\" \"}\n                        {this.state.auth_url}\n                    </a>\n\n                    <span className=\"p-float-label\" style={{margin: \"15px\"}}>\n                        <InputText value={this.state.api_token}\n                                   onChange={(e) => this.setState({api_token: e.target.value})}\n                                   style={{width: \"400px\", margin: \"5px\"}}/>\n                        <label>Api Token</label>\n\n                    </span>\n                    <Button label=\"Send Authentication Code\" onClick={this.sendAuthCode}/>\n\n                </Dialog>\n\n                {/*</div>*/}\n\n            </div>\n        );\n    }\n}\n\nexport default MyGoogleFriends;\n","import React from \"react\";\nimport {TabPanel, TabView} from \"primereact/tabview\";\nimport MyFriends from \"./my-page-components/MyFriends\";\nimport MyCodes from \"./my-page-components/MyCodes\";\nimport AddFriend from \"./my-page-components/AddFriend\";\nimport UpdateMyInfo from \"./my-page-components/UpdateMyInfo\";\nimport MyGoogleFriends from \"./my-page-components/MyGoogleFriends\";\n\n// import '../App.css';\n\nexport class Home extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            // login : new Login(),\n        };\n    }\n\n    async componentDidMount() {\n    }\n\n    render() {\n        const baseStyle = {width: \"100%\"}\n        return (\n            <div style={baseStyle}>\n                <div className=\"card\" style={baseStyle}>\n                    <TabView className=\"tabview-custom\">\n                        <TabPanel header=\"My Friends\" leftIcon=\"pi pi-user\">\n                            <MyFriends/>\n                        </TabPanel>\n                        <TabPanel\n                            header=\"My Vaccines\"\n                            leftIcon=\"pi pi-table\"\n                            rightIcon=\"pi pi-user\"\n                        >\n                            <MyCodes/>\n                        </TabPanel>\n                        <TabPanel\n                            header=\"Add New Friend\"\n                            leftIcon=\"pi pi-users\"\n                            rightIcon=\"pi pi-user-plus\"\n                        >\n                            <AddFriend/>\n                        </TabPanel>\n\n                        <TabPanel\n                            header=\"oogle Friends\"\n                            // leftIcon=\"pi pi-users\"\n                            leftIcon=\"pi pi-google\"\n                        >\n                            <MyGoogleFriends/>\n                        </TabPanel>\n\n                    </TabView>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport GoogleLogin from \"react-google-login\";\nimport {BASE_URL, BUILD_HEADER, clientId} from \"../services/base_service\";\nimport {SET_USER} from \"../redux/types\";\nimport {remove_key, put_storage} from \"../services/StorageUtil\";\nimport axios from \"axios\";\n\nclass GoogleAuth extends Component {\n    state = {\n        fullname: \"\",\n        email: \"\",\n        image: \"\",\n    }\n\n    checkNewUser = (googleUser) => {\n\n\n        let payload = {\n            \"google_id\": googleUser[\"googleId\"],\n            \"email\": googleUser[\"profileObj\"][\"email\"],\n            \"name\": googleUser[\"profileObj\"][\"name\"],\n        }\n        console.log(payload)\n\n        let url = BASE_URL + \"/update-user-info\";\n        const options = {\n            method: 'POST',\n            headers: BUILD_HEADER(),\n            data: payload,\n            url,\n        };\n\n        axios(options).then(data => {\n            console.log(data);\n            if(data.data[\"new_user\"]){\n                this.props.history.push(\"/me\")\n            }\n            else{\n                this.props.history.push(\"/home\")\n            }\n        })\n\n    }\n\n\n        onSignIn = (googleUser) => {\n\n        put_storage(\"google_user\", googleUser);\n        console.log(\"googleUser loged in \")\n        console.log(googleUser)\n\n        // let google_id = googleUser[\"googleId\"];\n        // console.log(\"Google id before check : \", google_id)\n        this.checkNewUser(googleUser);\n        const profile = googleUser.getBasicProfile();\n        this.setState({\n            fullname: profile.getName(),\n            email: profile.getEmail(),\n            image: profile.getImageUrl()\n        });\n        // Update the State\n        this.props.dispatch({\n            type: SET_USER,\n            payload: this.state\n        })\n        // save the user to the local storage\n        put_storage('user', this.state)\n        // Redirect to the Homepage\n    }\n\n    render() {\n        return (\n            (\n                <div>\n                    {/*<script src=\"https://apis.google.com/js/platform.js\" async defer></script>*/}\n                    <GoogleLogin\n                        clientId={clientId}\n                        buttonText=\"Login\"\n                        onSuccess={this.onSignIn}\n                        // onFailure={onFailure}\n                        cookiePolicy={\"single_host_origin\"}\n                        style={{height: \"7vh\", margin: \"10px\"}}\n                        isSignedIn={false} // auto load\n                        // scope=\"profile email https://www.googleapis.com/auth/user.birthday.read\"\n                        // scope=\"email profile\"\n                        scope=\"email profile https://www.googleapis.com/auth/contacts.readonly\"\n                    />\n                {/*<meta name=\"google-signin-client_id\" data-onsuccess={this.onSignIn} content={clientId} />*/}\n                    {/*<div className=\"g-signin2\" data-onsuccess={this.onSignIn}></div>*/}\n                </div>\n            )\n        );\n    }\n}\n\nexport default connect()(GoogleAuth);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport GoogleAuth from \"../../components/GoogleAuth\";\n\nclass LoginPage extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Login Page</h1>\n                <GoogleAuth history={this.props.history} />\n                {/*<Link to=\"/\">Home Page</Link>*/}\n            </div>\n        )\n    }\n}\n\nexport default LoginPage\n","import React from 'react';\n\nexport class Statistics extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n\n         // login : new Login(),\n\n        };\n\n    }\n\n\n    async componentDidMount() {\n\n\n    }\n\n\n\n\n\n    render() {\n\n\n\n        return (<div>\n                {/*<Login />*/}\nThis is Statistics!\n            </div>\n        );\n    }\n}\nexport default Statistics;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport {clientId, BASE_URL, BUILD_HEADER, getGoogleId} from \"../../services/base_service\";\nimport {get_storage, remove_key, put_storage} from \"../../services/StorageUtil\";\nimport {Button} from \"primereact/button\";\nimport \"../../css/divs.css\";\nimport {SET_UNAUTHENTICATED, SET_USER, STOP_LOADING_UI} from \"../../redux/types\";\nimport axios from \"axios\";\n\n// import axios from \"axios\";\n\nclass PersonalBar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: null,\n            email: null,\n            image: null,\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onSignIn = this.onSignIn.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.loadUserFromLocalStorage = this.loadUserFromLocalStorage.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.loadUserFromLocalStorage()\n    }\n\n    capitalize(str) {\n        if (str === null) {\n            // console.log(\"Str is null\")\n            return \"\";\n        }\n        if (str.length < 1) {\n            return \"\"\n        } else if (str.length === 1) {\n            return str.charAt(0).toUpperCase();\n        }\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    async fetchUpdatedUsername(google_id) {\n\n        let url = BASE_URL + \"/user-info?google_id=\" + google_id;\n        let response = await axios.get(url, {headers: BUILD_HEADER()});\n\n        let data = response.data[\"info\"];\n        // this.setState({name: data[\"name\"]})\n        return data[\"name\"];\n    }\n\n\n    async loadUserFromLocalStorage() {\n        const dispatch = this.props.dispatch;\n        let user;\n        user = get_storage(\"user\");\n        console.log(\"user\")\n        console.log(user)\n\n        if (user) {\n            dispatch({\n                type: SET_USER,\n                payload: user,\n            });\n\n            let google_id = getGoogleId(get_storage(\"google_user\"));\n            let name_from_db = await this.fetchUpdatedUsername(google_id)\n\n            this.setState({name: name_from_db})\n        }\n        dispatch({type: STOP_LOADING_UI});\n    };\n\n    // a function to logout the user\n    handleLogout() {\n        const dispatch = this.props.dispatch;\n        dispatch({\n            type: SET_UNAUTHENTICATED,\n        });\n        // remove the user from local storage\n        remove_key('user');\n    }\n\n    getPersonalInformation() {\n    }\n\n    onSignIn(googleUser) {\n        console.log(\"googleUser\");\n        console.log(googleUser);\n\n        put_storage(\"google_user\", googleUser);\n\n\n        var profile = googleUser.getBasicProfile();\n\n        let g_name = profile.getName();\n        this.setState({name: g_name});\n        let g_email = profile.getEmail();\n        this.setState({email: g_email});\n        this.setState({image: profile.getImageUrl()});\n\n    }\n\n\n    render() {\n        const {user} = this.props;\n\n        return (\n            <div className=\"navbar\">\n                <div className=\"logo\">\n                    <h1>Asi Karnesi</h1>\n                </div>\n                <div className=\"nav-right\">\n                    {user.isAuthenticated ? (\n                        <>\n                            {this.state.name}\n                            {/*<Text style={{textTransform: 'capitalize'}}>test</Text>*/}\n                            <img\n                                style={{height: \"7vh\", borderRadius: \"55%\"}}\n                                alt={user.credentials.fullname}\n                                className=\"user-img\"\n                                src={user.credentials.image}\n                            />\n                            <Button onClick={this.handleLogout}>Logout</Button>\n                        </>\n                    ) : (\n                        <Link to=\"/login\">\n                            <Button>Login</Button>\n                        </Link>\n                    )}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\n\nexport default connect(mapStateToProps)(PersonalBar);\n","import React from \"react\";\r\n\r\nclass Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Loading......</h1>\r\n        )\r\n    }\r\n};\r\nexport default Loading;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tisAuthenticated,\r\n\t\t\tisLoading,\r\n\t\t\tcomponent: PrivateComponent,\r\n\t\t\t...rest\r\n\t\t} = this.props;\r\n\t\t// Check if the user is authenticated\r\n\t\t// If they are not authenticated redirect them to the login page\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t\t{...rest}\r\n\t\t\t\trender={(props) =>\r\n\t\t\t\t\tisLoading ? <Loading /> :  isAuthenticated ? <PrivateComponent /> : <Redirect to=\"/login\" />\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.user.isAuthenticated,\r\n\tisLoading: state.ui.isLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_USER } from \"./redux/types\";\nimport \"./css/custom.css\";\n\nimport Welcome from \"./pages/Welcome\";\nimport Home from \"./pages/Home\";\nimport LoginPage from \"./pages/auth/LoginPage\";\nimport Statistics from \"./pages/Statistics\";\n\nimport UpdateMyInfo from \"./pages/my-page-components/UpdateMyInfo\";\nimport NavBar from \"./pages/bar-components/PersonalBar\";\n\n// Routes\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport { TabMenu } from \"primereact/tabmenu\";\n\n// services\n\n\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isAuthenticated: false,\n            credentials: {},\n        };\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n    async componentDidMount() {\n    }\n\n    render() {\n\n        const items = [\n            {label: 'Home', icon: 'pi pi-home', url: 'home'},\n            {label: 'Statistics', icon: 'pi pi-table', url: 'statistics'},\n            {label: 'My Profile', icon: 'pi pi-user-edit', url: 'me'},\n\n        ]\n\n        let activeItem = 1;\n\n        return (\n            <Provider store={store}>\n                <Router>\n                    <TabMenu model={items} activeItem={activeItem} onTabChange={(e) => activeItem = e}/>\n                    <NavBar/>\n                    <div className=\"container\" style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}>\n                        <Switch>\n                            <Route path=\"/\" exact component={Welcome}/>\n                            <PrivateRoute path=\"/home\" exact component={Home}/>\n                            <PrivateRoute path=\"/me\" exact component={UpdateMyInfo}/>\n                            <PrivateRoute path=\"/statistics\" exact component={Statistics}/>\n                            <Route path=\"/login\" exact component={LoginPage}/>\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\n// import { BrowserRouter as Router, Route} from 'react-router-dom'\r\n// import {TabMenu} from \"primereact/tabmenu\";\r\n// import {Home} from \"./pages/Home\"\r\n// import {Page2} from \"./pages/Page2\"\r\n// import {MyPage} from \"./pages/MyPage\"\r\n\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n\r\n      const items= [\r\n            // {label: 'Home', icon: 'pi pi-fw pi-home', url: '/'},\r\n            {label: 'Home', icon: 'pi pi-fw pi-calendar', url: 'home'},\r\n            {label: 'My Profile', icon: 'pi pi-fw pi-calendar', url: 'me'},\r\n            // {label: 'Page2', icon: 'pi pi-fw pi-pencil',url : 'page2'},\r\n            // {label: 'Add Person', icon: 'pi pi-fw pi-pencil',url : 'AddPerson'},\r\n        ]\r\n\r\nlet activeItem = 1;\r\n// const setActiveItem = (e) =>{\r\n//     console.log(e)\r\n//         activeItem = e;\r\n//     }\r\n\r\n\r\n\r\n// const routing = (\r\n//     <Router>\r\n//         <div>\r\n//             <div className=\"nav-bar\">\r\n//           <TabMenu model={items} activeItem={activeItem} onTabChange={(e) => activeItem = e} />\r\n//           {/*<TabMenu model={items} activeItem={activeItem} onTabChange={(e) => setActiveItem(e.value)} />*/}\r\n//           </div>\r\n\r\n//             <Route path=\"/\" component={App} />\r\n//             <Route path=\"/home\" component={Home} />\r\n//             <Route path=\"/me\" component={MyPage} />\r\n//             <Route path=\"/Page2\" component={Page2} />\r\n//             {/*<Route path=\"/AddPerson\" component={AddPerson} />*/}\r\n//         </div>\r\n//     </Router>\r\n// )\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}